{"version":3,"file":"/Users/endlessdev/Workspace/rankr-org/models/params/DaumParam.ts","sources":["/Users/endlessdev/Workspace/rankr-org/models/params/DaumParam.ts"],"names":[],"mappings":";;AAEA,IAAI,WAAW,GAAgB;IAC3B,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,qBAAqB;IAC1B,aAAa,EAAE,qDAAqD;IACpE,cAAc,EAAE,UAAU,CAAC,EAAE,IAAI;QAC7B,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACnB,MAAM,CAAC;YACH,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;YAChD,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,EAAE;YACjD,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;SACnE,CAAA;IACL,CAAC;CACJ,CAAC;AAEF,kBAAe,WAAW,CAAC","sourcesContent":["import {ParserParam} from \"../ParserParam\";\n\nlet parserParam  : ParserParam={\n    type: 'daum',\n    url: 'http://www.daum.net',\n    querySelector: 'ol.list_hotissue > li .rank_cont:not([aria-hidden])',\n    parserSelector: function ($, elem) {\n        var data = $(elem);\n        return {\n            title: data.find('.txt_issue > a').attr('title'),\n            rank: '',\n            status: data.find(\"em.rank_result .ir_wa\").text(),\n            value: data.find(\"em.rank_result\").text().replace(/[^0-9]/g, \"\")\n        }\n    }\n};\n\nexport default parserParam;"]}