{"version":3,"file":"/Users/endlessdev/Workspace/rankr-org/utils/NateParser.ts","sources":["/Users/endlessdev/Workspace/rankr-org/utils/NateParser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,gDAAyD;AAEzD,IAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,EAC/B,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAEzC;IAAA;IAiCA,CAAC;IA7BuB,sBAAW,GAA/B;;gBAEQ,UAAU,EAOR,cAAc,YAMhB,eAAe,EACf,cAAc,wBAET,OAAO;;;;qCAhBa;4BACzB,UAAU,EAAE,GAAG;4BACf,QAAQ,EAAE,MAAM;4BAChB,WAAW,EAAE,IAAI,IAAI,EAAE;4BACvB,IAAI,EAAE,EAAE;yBACX;yCAEsB;4BACnB,GAAG,EAAE,IAAI,CAAC,YAAY;4BACtB,QAAQ,EAAE,IAAI;yBACjB;wBAEgB,WAAM,OAAO,CAAC,cAAc,CAAC,EAAA;;mCAA7B,SAA6B;0CACxB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE;yCAC5C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC;wBAEtH,GAAG,CAAC,4CAAgB,4BAAc,EAAd,IAAc;;4BAC9B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;gCACjB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;gCAChB,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;gCACjB,MAAM,EAAE,iCAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gCACzC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;6BACpB,CAAC,CAAC;yBACN;wBAED,WAAO,UAAU,EAAC;;;;KACrB;IACL,iBAAC;AAAD,CAAC,AAjCD;AAEmB,uBAAY,GAAG,0CAA0C,CAAC","sourcesContent":["import {RankResult} from \"../models/RankResult\";\nimport {changeFormattedStatus} from \"../utils/Formatter\";\n\nconst iconv = require('iconv-lite'),\n    request = require('request-promise');\n\nexport default class NateParser {\n\n    private static API_ENDPOINT = \"http://www.nate.com/nate5/getlivekeyword\";\n\n    public static async getNateRank() {\n\n        let rankResult: RankResult = {\n            resultCode: 200,\n            rankType: \"nate\",\n            requestDate: new Date(),\n            data: []\n        };\n\n        const requestOptions = {\n            url: this.API_ENDPOINT,\n            encoding: null\n        };\n\n        const response = await request(requestOptions);\n        let encodedResponse = iconv.decode(response, 'EUC-KR').toString();\n        let parsedResponse = JSON.parse(encodedResponse.replace(/';RSKS.Init\\(\\);/gi, '').replace(/var arrHotRecent='/gi, ''));\n\n        for (let keyword of parsedResponse) {\n            rankResult.data.push({\n                rank: keyword[0],\n                title: keyword[1],\n                status: changeFormattedStatus(keyword[2]),\n                value: keyword[3]\n            });\n        }\n\n        return rankResult;\n    }\n}"]}